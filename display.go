package main

import (
	"fmt"
	"image"
)

const (
	cellScale = 16
	cellsWide = 64
	cellsHigh = 32
	windowWidth  = cellsWide * cellScale
	windowHeight = cellsHigh * cellScale
)

var fontSet = []uint8{
	0xF0, 0x90, 0x90, 0x90, 0xF0, //0
	0x20, 0x60, 0x20, 0x20, 0x70, //1
	0xF0, 0x10, 0xF0, 0x80, 0xF0, //2
	0xF0, 0x10, 0xF0, 0x10, 0xF0, //3
	0x90, 0x90, 0xF0, 0x10, 0x10, //4
	0xF0, 0x80, 0xF0, 0x10, 0xF0, //5
	0xF0, 0x80, 0xF0, 0x90, 0xF0, //6
	0xF0, 0x10, 0x20, 0x40, 0x40, //7
	0xF0, 0x90, 0xF0, 0x90, 0xF0, //8
	0xF0, 0x90, 0xF0, 0x10, 0xF0, //9
	0xF0, 0x90, 0xF0, 0x90, 0x90, //A
	0xE0, 0x90, 0xE0, 0x90, 0xE0, //B
	0xF0, 0x80, 0x80, 0x80, 0xF0, //C
	0xE0, 0x90, 0x90, 0x90, 0xE0, //D
	0xF0, 0x80, 0xF0, 0x80, 0xF0, //E
	0xF0, 0x80, 0xF0, 0x80, 0x80, //F
}

type Display struct {
	displayCells [cellsHigh][cellsWide]bool
	displayImage *image.RGBA
	
}

func NewDisplay() *Display {
	return &Display{
		displayCells: [cellsHigh][cellsWide]bool{},
		displayImage: image.NewRGBA(image.Rect(0, 0, cellsWide, cellsHigh)),
	}
}

func (d *Display) Clear() {
	fmt.Println("Clearing display")
	for row := 0; row < cellsHigh; row++ {
		for col := 0; col < cellsWide; col++ {
			d.displayCells[row][col] = false
		}
	}
}